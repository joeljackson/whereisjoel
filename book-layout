Notes:
0) Introduction
# Why is software engineering important? X
1) On Hiring
  a) On the importance of hiring
  b) On the difficulty of hiring
  c) On The Hiring Playbook
  d) On team structure
  e) On sourcing
  f) On interviewing
  g) On impressing talent
  h) On agile talent
  i) On Onboarding
  j) On Holding onto talent
  k) Hiring Checklist
2) On day to day software engineering
  a) On Agile Software development X
  b) On Managing your team
  c) On Managing individuals
  d) On setting direction
  e) On evaluating employees
  f) On understanding the effectiveness of your team
  g) On managing a product backlog (North Star. Identify Business Value en route. )
  h) On integration frequency and size
  i) On 10X developers
  j) On physical proximity
  k) On Self Care
  l) Effectiveness Checklist
3) On Strategy
  a) On build vs buy X
  b) On making decisions X
  c) On software quality (Aka Technical Debt)
  d) On cycle time
  e) On delaying decisions
  f) On "sprints"
  g) On managing “Roadmaps”
  f) On jerks
4) Traps
  a) On maximizing Utilization
  b) On support (WTF is this?)
  c) On "agile"
  d) On Running Cover

Ideas for posts
# Product as guided local search
# Gatsby + Netlify
# On the economics of early stage health startups
  

Manager sets true north.
Great communication up to create ideas. Great communication down about what.
Manager understands individual's core values
Frontline workers make calls

