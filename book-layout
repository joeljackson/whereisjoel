Notes:
0) Introduction
# Why is software engineering important?
1) On Hiring
  a) On the importance of hiring
  b) On the difficulty of hiring
  c) On team structure
  d) On sourcing
  e) On interviewing
  f) On impressing talent
  g) On agile talent
  h) On Onboarding
  i) Hiring Checklist
2) On day to day software engineering
  a) On Agile Software development
  b) On Managing your team
  c) On Managing individuals
  d) On setting directionH
  e) On evaluating employees
  f) On understanding the effectiveness of your team
  g) On managing a product backlog
  h) On 10X developers
  i) On physical proximity
  j) On Self Care
  K) Effectiveness Checklist
3) On Strategy
  a) On build vs buy
  b) On making decisions
  c) On software quality (Aka Technical Debt)
  d) On cycle time
  e) On delaying decisions
  f) On "sprints"
  g) On managing “Roadmaps”
  f) On jerks
4) Traps
  a) On maximizing Utilization
  b) On support (WTF is this?)
  c) On "agile"
  d) On Running Cover

Ideas for posts
# Product as guided local search
# Gatsby + Netlify
# On the economics of early stage health startups
  